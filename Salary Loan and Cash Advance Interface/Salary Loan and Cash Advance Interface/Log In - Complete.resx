<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="DecoyLogo.Locked" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="DecoyLogo.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAJQAAACRCAYAAAAl8ZFnAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAO
        xAAADsQBlSsOGwAAFwNJREFUeF7tnXWQXMUWxt8/FFYQNLi7uwV3d7dAcIcAhbsXBA+SKhwSIHgIEDS4
        Oync3d3tvvqdt9++y9CzO3fu6R3ZPlVfzezszL3dp78+ffr06b7/6du3b5aQ4IVEqARXJEIluCIRKsEV
        iVAJrkiESnBFIlSCKxKhElyRCJXgikSoBFckQiW4IhEqwRWJUAmuSIRKcEUiVIIrEqESXJEIleCKRKgE
        VyRCJbgiESrBFYlQCa5IhGpDTDnllPY61VRT2evEE0/8j//HRCJUG2KKKabIJp98cnudddZZs7nmmiv4
        vRhIhGpDQCSs08CBA7PLL788u/TSS4Pfi4GohJp66qnN/E466aT2SkV5H/pugh+k8+OPPz679957s7vu
        ust0T3uEvu+JqITSWD7RRBPZ+2mmmcYqVvm9BF9MO+202YYbbph98MEH2a+//pr9/vvv2VFHHZVNMskk
        htBvvBCVUJNNNll24403ZocffrhVJFmnngF6v/XWW7M//vgjk7z33nvZiiuu2NnJY8GdUJpZ8DrnnHNm
        n3zySfbll19mgwcPznbaaafOGQdOY+zK9SZg+SESr/PPP3/27bffZn///XcnkFGjRmWHHHJI8PdecCeU
        KtWnT5/ssMMOM3OLUEFM8A477GBDIIRLw58fsP7olI562mmnmc7zgrV69913s5tuuin4ey+4E4qKTTfd
        dEas4cOHZ3/++WdHlf4no0ePzhZbbLFOS5bgA1wKfKeFFlooe+aZZzq0/U+hU/O/0O+94E4orA5YYIEF
        sieeeCL766+/DDK7CLMOHHRIBfHS0Fce6BxSnXXWWWaN8vpGaAM+/+GHH7JFF13UdI7uQ9cqg2gWao01
        1jD/qZJMCJW66KKLbKxHCZjp0LUSagd6x/K//vrrHVr+t6gdDjzwQPtNSxAKzDLLLNluu+1mha8m9Jbn
        n38+W3jhhROhSkCuAyPC0KFDO7QbFjo3cuedd2bTTz/9v67lgSiE2mSTTbIhQ4ZY4asJvQVS3XHHHT0S
        cGtH0BGxMlinQYMGZR9//HHnJKhSNFLwSghh7bXXNrcjdN0ycCcUldxnn33MIe9OqOBrr72WzTfffMFr
        JXQN/CbIBIYNG2auBJ20mohQX3/9dda/f/8oHdmdUDh7WB2IUqsw9C2yyCJRxvR2BromrnfMMccYSWoV
        SHXmmWcGr1kWUYa8N998M/vll186it+90HOI7LIynvyp2oGFWX311bNXX33VSFIZoqkmfPeGG24IXrMs
        3AmFGf7www+z3377raP43QuEYs2JVXFmfqHrJvwbDHU333yz6RCSoMdaSTVixIgo4RoXQkEivRIy+PTT
        TzuKXbugkO+++87SLTT0EajL3yfhf1N9iMAs7YQTTrBgZT3y9NNPWxA0dI8ycLNQIhUONpXsyjmsJgyT
        DJerrrqqXStGD2p10MnQ9eabb5498MADhaxSXj766KNs4403Dt6jDFwIhd8jbL311h1Frk+wVJjjGWaY
        Icq0ttWBjvE1X3rpJXMr0BcoIpAQOfnkk4P3KAMXQskMg6OPPtoKW7SSiCqKovbcc88ezYVuZmCRpGM6
        2XbbbWfuQVkZOXJk5xKY12TI1SnHSSRLEClKKH1fpCIzgSSx0H16GyCTSLXWWmt1ubxSi0jHL7zwgoVr
        IBPXDt27KNyGPAoEoa644oq6rFNe5H+RatGvXz/rQfLReiOwTIQI0C/LJvX4THkRoVhrJWLedISiMBSK
        Rie+oQLXK/wePPnkk7YmqOuH7t0bAJk0NI0ZM8Y6bNlOi/z444/ZFlts4UYm4EooKkyU3KOyCD3x7bff
        zgYMGNCrCUWyIo74VVddZf4lFryeWXSl0Gn33nvvTmMQundRuPlQItTtt9/uRigEUmHm5UPQW7lPqAzt
        BjUyr0cccUT21ltvdWilnKBT2oiFZILJpGp76bTpCYV8/vnn1pMglEx/qAztBnwm9DrbbLNZsmKR1Yeu
        RBaOdmKbFZOfXmOhJC+++KLl/HAP7hUqQ7uBegJCMWQSeIra6JVXXrHcf6/MAxdCMQuh4hQKH6qsU54X
        Kg5YTSckoUhxqBztCOrKbFcTFW/5+eefszPOOKO5CIVppuKs4912222uFc9f65133rH1K3bNhMrRbiCw
        u9dee2U//fRThwb8Bf16blV3IZRM84ILLmjBMsZn796k67EViJSNUDnaDfPOO2/23HPPdcadYrgSCKlD
        jDKhMhSFmw9FgTbYYIO6Mg2KCMQiIW+JJZYwyxgqSytDyyt0UHawVEvp9RIcfbZWeaUNuRBKPg2zBaKv
        sUQ9lKwE0lzakVDMZBnSV1hhhai6lGD9mEEy4QmVpyjcLBQgHYJE+ViSN/mPPvqomyPZbGBrGQvAJB3G
        FtwTViSajlBYKSxU7CFPQs9af/31bWjQ/SvL1IqgPpyUogVgb180JKQQe/mlLUsorNVDDz1kVkphi1C5
        Wg2s/j/77LNWx54gE0LgeJdddgmWpyhcCKXFRREKRRRVhn5T6+8g1DfffGMJfTiUKkOrQtF/YkJFNniU
        FZx+sjfRY2WZ6kEUC1WUTPUIhMLHuPrqq+2YIPyOULlaAXQG9DfjjDNmDz74oNWvJ3SIcB+i5SuvvHKw
        bEXhRiiGnVVWWcV2pfaE4EOhDGZCJNy3soMOoZixHnDAAWZ1kZ4iFMIQu/jiiwfLVhQuhMJ/AaRYMPuK
        pYz8LO/77783U829IBfnTmkx1StI11PAOgEWahHq8/7779vfWA/+ztfdW7744ots9913D5atKNwIxSsB
        OZZeYlYeIRhHIt9GG21k93vqqadsB8g888zTkpkIdASm7awCsLx0zTXXZFtttZV9zkkp+FTqpPg83sFO
        2ovdx6GyFYWbU04wjl7mmWBXKbou27QOOuigzmEOi7TlllvakEtZWm34W2+99bJ9993XfFB1TurEZOOW
        W26xOkMo6h9jWYvrktGge5eBm4XSDpVY6SuI8oFI5TjvvPOMPMLMM89sa1/0aohdWcZmBjEggsIkulEX
        dEkdNttsM1sbzRMohm6bklD0KCyDd7ZBXvAlAEI6y8UXX5wtueSSluVAORSTajUfCusOidAjs9VlllnG
        4kKkrUAoFojZNhWrozYdoYB8Fw4MhVCYZg+hslwP8B7rdNlll9kRyV5T3WYHVpdjDAmRSK/Si4c0HaEw
        zxAKc82Z5IinlcpfiyOq2ZvGPT0U0AqgnjPNNFN2+umn25IMh5FAAiCLXUaajlAMMTQwOPLIIzsL6SFS
        GDMblgiIOe2///6mYHpuqDztBjoq6To0+jbbbJNtu+229kCBshs+JU1HKApCyID3TD+9hru8EHdiEymz
        IY5cZGG4shy9Aeq4Sy21lOkjv0wj16CoNB2hqKAcYfK+vQmFlWL6rON9uB+Vb+XoeL0QocCOO+5oLkBe
        321BKMiED0UlOeTCO4+HGR370rgXllDk9VBAqyF/gAg6h1TE/nR4RlsQKg/GeoanopJXRL7HcWgGzyfp
        jdaoO+BDQgKWvNgKxZqcOnMRYjECNFWkPA82JbI2VK9IEZCSOAzRY2IzWL/Q/XozsNQQCt3guHPYG6nR
        RQ5wRSAhs/PQPYrCnVBUEqtS7y5XCMUhDpdccokFLeUv9MbhrTtoVUDEglQ8TYFVBPbb1SosspNyHLpH
        UbgTioqxBx9S1CJ504zpZZX9xBNPTCQqAXTHsdGMFN3t6UP/TZe+UomXX3658NZpKo8fwJBJTwOhayfU
        BvSHu0BcsCtS4ZA//vjjbg+6jmKhGK7YmlPNMeRz/Y8KffbZZ9muu+5qv01WyQ/S5wUXXGC6ribXXXed
        W9pPFB+K1BIKWY1QEv5P/o92r/DbZJn8gC4Js+BrPfLIIxYEzYd00D8dGp8L3YeuURTuhKISq622mgU4
        uyMUM7mzzz7bZnGaAntVLKGvZWGgW3RKRitZC4wG+dEBh5wZHn5X6BpFEcWHImbE2Y1EcSl8JbHoJTwL
        5txzz7UKp2EuPiAV57+fcsopRiTF+ngYJomJTWuhKBgE4ZR+dqTmRcRiYyHrcVglxu5kleKDkWOCCSaw
        zs4xkwjtwUiCdWpaC6Whi/esiOctFD3jjTfesExEfZ+KJELFBzqm8wKi4opTaXOH1xFJ7oQSmegRlWeW
        QyyGOSoAKn8bgiwYxNM6Fp+pV3GfvO/Fez7LX6MVoTqog1aC+ipDVTpAL5XXCYHnxNxzzz02UpCoiB6V
        LVIW0XwoXjfddFNbtGS8JmjJe3aqUHkqgf9U+dtKSIH6m9+JZCKa/pdXvj5rNcinhCSAyPe6667bCWbE
        +KeA/4lQ/Fav3YF7cGYpEyJy8blfrWTsDu6EolJqaF55JgnTVeJS5IBPOOGEVgH9P3SNPLgeRIGkVH7Z
        ZZe1U90OPfRQAyEKthqtueaaFhRFWdwjdK1WAHXFWvAsZhqclQO5DYDOyau2kKNT6s/DhAhO1kIqWXhZ
        OBE49N2iiGKhBArJMgrmlVACpjaffpEHipT1oYIiGw/EJujJsX2PPfaY+WBSKmA41fT34YcftqAqMxkm
        BZCL68liNiOoM+XkFSLtvPPOndmY+dlYNYFYrJsSgqHT0snY0p5P8+HalfeNhaiEghi8ymrxWq0n8H8S
        6DRsHXzwwbbGpEO3RCCGTpEI8LcggqHkr776yghIhqfiMaH7Nho09korrWRPjGCXsET17UpUZ4Q6Qz4A
        GRkee5JIQlRC1QKRDCsCOFaRhDEWl1FYrYIipeB8Q3BWAKmypMxqqOV+jVB2HtSVDsSGC54R6H1sNJac
        E1Ww1F4Ody1oOKFkxRgKBw4c+I8ksSICibBOeTLpM4bDK6+80hSbt5r5cvQ0mKYDHvGqYY2yegpPoGCm
        Hbp/LDScUAx1KJZMA3a1eIkaR6/az8fuXJGqkYDcc8wxxz8OaPMkFJ2JOnMaDkNqqAwx0HBC4TQzQ2OZ
        RorwFl2TYB6L1hCKCUKoPDGBFWaoZbhjJnrOOedYubqTenWC5YOkWCrdP7Zlbjih6KWcniIp4jfVIzjr
        HJ7PI2hD5YkJWUYsshLgqpGl6OchgUx8HxdCZ2jGnvE2nFAkgHGaChVXj4ohXF9kHTVqlDn/ofLEBMM7
        pGLYJamtWl35PPS/fB2KyrXXXmsz6FC5PNEQQuUdYw6xL9LrQqLf0wjEZOTkVrsufgsBQYYABfkqyxgD
        hC5YFD///PP/UTbeU3Zemf7TwZRCXY10RQXLzK7j2WefPVg2LzSEUCiWxmQZpiuzX0Qw6/T6wYMHW4ai
        dn6Erk1K7N13322Rd8oDqSrLGAMQ97jjjvvXKX8iFPEj9sexvsbpKyQfeglE5b4MtaGyeaEhhML0cpjW
        0KFDO+NH9Yp+y9Mul19+eVt+YUg56aSTqj6JgHvSWOQHUR5FlGMDy8wxh5xUV0koLCuPvce3G2eccaxM
        BDs5GMNDqDOWj8fEhcrmhYYNeRBAu13LmHXWCclCJICnGYxeTz31VCNcpZXSkEiMhrLEnPno2lgnDvig
        PLq/hPqji3XWWScbe+yxrUx0OgKfHDNdWf56hfuiLzpcvmyeaAih6IWs72nvXhlCsYZFj2fNj2vL2jCk
        snxDLKayQWTVOMsq9pKM/EUIRRkRhp+8oAceacLzXcYdd1z7LuViKGZtTnoqSyz0TN3pfNwjhpPeEELx
        JG6GIymojKIYElgUJq4kBdHzyE7EASbnJ399FIpi+YwzwQlbVJbPEzScLAEzS+5bWV+GIvK9OXSWcvNd
        EZ06sIziIbo3YRPKFKMz9Rih1FOpCLMcRJaijJDOOmLEiM64koYwGgY/jf+FGlES+9B8rAxWE4vJgWFI
        vt6Ui1nn/fffb0Mi5aZjCEsvvbTtWCkr6kQI94OoahNP9BihaGQUS8Mzw/ISzqAkC5SGwP+AHNyLBmSI
        YbkF3yFEKJS8/fbb2/dDZfYAFgpSsdQiYoQINXr0aDtaeu655zbficamDgxPbCTQd+sV/ZY6MwPm2OoY
        9e7RIY8K0OPGjBljlfMQGgk/g/UqVteVgTj++OOb88nTKqs1BJ+zaEzmIxFkCO+1Mk8ZuB515kmn5G4z
        eZCoTLxyFsTIkSNtSGTmu99++9nw16dPH8uSuO++++x71epRVFiAJx4VI2reY4SScml40jUQDwXxRCpi
        N8R3OPyemRK9fKyxxrJjpnH+u7oPsR+S8iAA1sQrWZ/6ck2eUIDzT2xMC8F5cvCKP8lx3HyXBXLek+JL
        WQiF4CPmf1Ov8HssFCsFkClG/K3HCCXntF+/fuYoI1SurJBizLDGoi8zuj322MPShCEUxEJ5XTUEjQyh
        GIohgNfMh/oyUSA9FxBwJYGOsuSHYF5xyrEaJANCnuHDh1uCHPoih5w9jGX9Te4jYAUpI/WtLHdZ9OiQ
        JzAMSaTYeoVcJ2ZrONc0CH4IDcmQh/+Bsxu6hz4jckzjh8rpAZGUoRiiKLMyL5QFv4YjdTjCiDrwG6wc
        h615dLy8DthGhXVqG0KRUE/yPcotSyisEteCRESYGSZoDAhFNmS1tUJ9xhMMYph+gUYDONhYTwKYiitJ
        IAwkGzJkiBGPycV4441n/hwTDg9CIVg51gg5ukcjRqjMZdAQQpELxDID1qUsoWgIFD5gwIBOMqEo7oGz
        TgNWIxTDS+zjqSGS3jMT5cFAlTuqJdSD4ZcNHTzZkwxWhjsPQnEN9M0GCOqLrlo6DpUHDc46FcG8soSS
        stldo80IWAQtW4TSiTXkyJeIOeTlgSVkCBs2bJhZ1pBfxPDNc/NYHCYjQs/Pq1ekX+6FtcbihcrmhYYQ
        CsViGQYNGmQr/x6kYvmFhuARFjjjPAia2VOod3M/shx4ghXDSuykM4F6Q3TCFCwSV/pSCMMh/hQhBoan
        MrrRb3ll9sgexuWWWy5YNi80zEJhRbAMHDJKby0rKA3y0BN5X60hsFgEVskN4v6Y//ywFBPyWSAx9+ZB
        S9U2ZHRVh1oFXaAT0qt5+gT394qzVUNDCJUHwxRTanwdnHQUAPS+rOQbBR/iwgsvtKBeERLR+My45GvJ
        iccn4jqaLfE9Gk3E6Qpcj1ko5CYWJn+yDIn0W4hEVgGpKsxy8cUoO+XkvqHyeKHhhKKCNArOKgu9ylQs
        2zvzwjCCc8sh8Si2lgYX+D5E4bxKNhVcf/31RgJCH1hXdimzjMHsjOtCNhGsO/A9znXH/+MUOZx1hm7p
        oDsRAfO6wueirqwbMvxTLsrPvYRQWbzQcELRYJCK+AsNRtalR7oGv8XKsdOFTEWexEBjcz8cd1mZ7sD3
        IBMBUlJM8Pm4LkMVjcfiNM4u/iDXrvW6NDLgPf4kUX1WEXDaif5zbfTAvapJnlDKC6NjsnRDGCVEIN0z
        FhpOKAHHmIYm4xKlsnuYBqThpFhMuaChUcL3yI3CH2P45Lck8dFI+dlf6N5dASeaXTkid7VhmKdkKSer
        jBVgOs/ZBByWwfMApQvW+5hIUDdB5xkQiWeNFFJCGHXS0PVjo2kIhQI0vDAE8oqPweFkTHWZTrMGKGDW
        ARaCv5li9+/f32Z4LArTQ7mGFEsj19M7GcZYTyOlmLwkgqhYD4iFVcDhJdqu47C5R5EhtRL6Lc4zZZeV
        oT5YMgguQGBeRSDA78vcvyyahlC1gMaqROh7McC9aFSsxrHHHmvZAQzR5KXXS9Z2REsRqpGQbySrwXss
        A6+JUP9HIlQB5IcU3vMZ7yFTjGWMVkQiVIIrEqESXJEIleCKRKgEVyRCJbgiESrBFYlQCa5IhEpwRSJU
        gisSoRJckQiV4IpEqARXJEIluCIRKsEViVAJrkiESnBFIlSCKxKhElyRCJXgikSoBFckQiW4IhEqwRWJ
        UAmuSIRKcEUiVIIrEqESXJEIleCIvtl/AeObnG5uGklaAAAAAElFTkSuQmCC
</value>
  </data>
</root>